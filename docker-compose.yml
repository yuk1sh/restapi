version: '3'
services:
  db:
    container_name: postgresql
    build:
      context: ./postgresql
      dockerfile: Dockerfile
    image: rest-api/postgresql
    env_file:
      - ./postgresql/.env
    ports:
      - 5432:80
    networks:
      - container_link
    volumes:
      - postgresql_data:/var/lib/postgresql/data:rw
      - ./postgresql/initdb.d:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8 --locale=C'
    logging:
      driver: json-file
      options:
        max-size: '5m'
        max-file: '1'
  api:
    container_name: api
    build:
      context: ./api
      dockerfile: Dockerfile
    command: node app.js
    image: rest-api/api
    volumes:
      - .:/api
    ports:
      - 4200:4200
    networks:
      - container_link
    depends_on:
      - db
    logging:
      driver: json-file
      options:
        max-size: '5m'
        max-file: '1'
  # web:
  #   container_name: web
  #   build:
  #     context: ./web
  #     dockerfile: Dockerfile
  #   command: npm run dev
  #   image: rest-api/web
  #   volumes:
  #     - .:/web 
  #   ports:
  #     - 4242:4242
  #   networks:
  #     - container_link
  #   logging:
  #     driver: json-file
  #     options:
  #       max-size: '5m'
  #       max-file: '1'
  pgadmin4:
    container_name: devenv_pgadmin4
    image: dpage/pgadmin4:6.2
    env_file:
      - ./pgadmin4/.env
    depends_on:
      - db
    ports:
      - 5433:80
    networks:
      - container_link
    volumes:
      - pgadmin4_data:/var/lib/pgadmin:rw
    logging:
      driver: json-file
      options:
        max-size: '5m'
        max-file: '1'

networks:
  default:
    name: bridge
  container_link:
    name: devenv.docker.internal

volumes:
  postgresql_data:
    driver: local
  pgadmin4_data:
    driver: local